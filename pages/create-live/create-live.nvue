<template>
	<view>
		 <live-pusher 
		 id='livePusher' 
		 ref="livePusher" 
		 class="livePusher" 
		 url=""
		 :mode="mode" 
		 :muted="true" 
		 :enable-camera="true" 
		 :auto-focus="true" 
		 :beauty="beauty" 
		 :whiteness="whiteness"
		 aspect="9:16" 
		 @statechange="statechange" 
		 @netstatus="netstatus" 
		 @error = "error"
		 :style="'height:'+windowHeight+'px;'"
		 style="width: 750rpx;"></live-pusher>
		 <view style="position: fixed;left: 0;top: 0;right: 0;height: 500;" :style="'top:'+statusBarHeight+'px;'">
			 <view class="flex align-center justify-center" style="width: 90rpx;height: 90rpx;">
					<text class="iconfont text-white">&#xe607;</text>
			 </view>
			 <view class="position-absolute bg-danger" style="left: 90rpx;right: 100rpx;height: 160rpx;">
			 	
			 </view>
			 <view class="position-absolute right-0  flex flex-column" style="width: 100rpx;">
					<view class="flex flex-column align-center justify-center bg-main" style="width: 100rpx;height: 120rpx;"></view>
					<view class="flex flex-column align-center justify-center bg-main" style="width: 100rpx;height: 120rpx;"></view>
					<view class="flex flex-column align-center justify-center bg-main" style="width: 100rpx;height: 120rpx;"></view>
					<view class="flex flex-column align-center justify-center bg-main" style="width: 100rpx;height: 120rpx;"></view>
			 </view>
		 </view>
		 <view class="position-fixed bg-main flex align-center justify-center rounded-circle" style="height: 120rpx;left: 100rpx;right: 100rpx;bottom: 100rpx;">
		 	 <text class="text-white font-md">开始视频直播</text>
		 </view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				url:"",
				mode:"",
				enableCamera:true,
				position:"back",
				beauty:0,
				whiteness:0,
				windowHeight:0,
				context:null,
				statusBarHeight:0
			}
		},
		onLoad() {
			let res=uni.getSystemInfoSync()
			this.windowHeight=res.windowHeight
			this.statusBarHeight=res.statusBarHeight
		},
		 onReady() {
		           
		            this.context = uni.createLivePusherContext("livePusher", this);
					this.startPreview()
				},
		methods: {
			  statechange(e) {
			                console.log("statechange:" + JSON.stringify(e));
			            },
			            netstatus(e) {
			                console.log("netstatus:" + JSON.stringify(e));
			            },
			            error(e) {
			                console.log("error:" + JSON.stringify(e));
			            },
				start: function() {
				                this.context.start({
				                    success: (a) => {
				                        console.log("livePusher.start:" + JSON.stringify(a));
				                    }
				                });
				            },
				            close: function() {
				                this.context.close({
				                    success: (a) => {
				                        console.log("livePusher.close:" + JSON.stringify(a));
				                    }
				                });
				            },
				            snapshot: function() {
				                this.context.snapshot({
				                    success: (e) => {
				                        console.log(JSON.stringify(e));
				                    }
				                });
				            },
				            resume: function() {
				                this.context.resume({
				                    success: (a) => {
				                        console.log("livePusher.resume:" + JSON.stringify(a));
				                    }
				                });
				            },
				            pause: function() {
				                this.context.pause({
				                    success: (a) => {
				                        console.log("livePusher.pause:" + JSON.stringify(a));
				                    }
				                });
				            },
				            stop: function() {
				                this.context.stop({
				                    success: (a) => {
				                        console.log(JSON.stringify(a));
				                    }
				                });
				            },
				            switchCamera: function() {
				                this.context.switchCamera({
				                    success: (a) => {
				                        console.log("livePusher.switchCamera:" + JSON.stringify(a));
				                    }
				                });
				            },
				            startPreview: function() {
				                this.context.startPreview({
				                    success: (a) => {
				                        console.log("livePusher.startPreview:" + JSON.stringify(a));
				                    }
				                });
				            },
							   stopPreview: function() {
							                this.context.stopPreview({
							                    success: (a) => {
							                        console.log("livePusher.stopPreview:" + JSON.stringify(a));
							                    }
							                });
							            }
		}
	}
</script>

<style>

</style>
